@import "./src/styles/settings/_variables";

/* ==========================================================================
   Buttons
   ========================================================================== */

.button {
  @extend .antialiased;
  user-select: none;
  display: inline-block;
  text-align: center;
  white-space: nowrap;
  vertical-align: middle;
  line-height: 24px;
  padding: 0.25rem 0.75rem;
  background: none;
  text-shadow: none;
  font-size: 14px;
  border: 0;
  border-radius: $full-border-radius;
  font-weight: $base-font-bold;
  cursor: pointer;

  &--primary-filled, &--secondary, &--tertiary, &--secondary-bounded {
    min-width: 128px;
  }

  &--secondary.dropdown {
    min-width: 220px;
  }

  &--primary-filled {
    color: white;
    box-shadow: inset 0 0 0 1px #f5333f;

    &.disabled {
      box-shadow: none;
    }

    &.tertiary {
      border: none;
    }
  }

  &--secondary {

    color: $primary-color;
    box-shadow: inset 0 0 0 1px $primary-color;

    &:hover {
      background-color: $primary-color;
      color: white;
    }

    &.disabled {
      box-shadow: inset 0 0 0 1px grey;
      color: grey;
    }

    &-bounded {
      border: none;
      color: $primary-color;
    }

  }

  &--tertiary {
    border: none;
    color: $primary-color;
  }

  &--tertiary {
    border: none;
    color: $primary-color;
  }

  &--other {
    color: $primary-color;
    min-width: 250px;
    min-height: 50px;
    border: 1px solid #D3D3D3;
    border-radius: 1px;
    box-shadow: 1px 1px 3px 0 #D3D3D3;
    border-radius: 5px;
    text-align: left;
    padding-left: 20px;
    .arrow {
      margin-right: 0px;
    }

    &:hover {
      box-shadow: 2px 2px 3px 0 #D3D3D3;
    }
  }

  /* States */

  &.down:hover {
    opacity: initial;
  }

  .drop--open > &,
  &.button--active,
  &:active {
    z-index: 2;
    transform: none;
  }

  &, &:focus {
    outline: none; // This causes usability problems. Needs fixing.
  }

  /* Icon handling */

  &::before,
  &::after,
  [class^="collecticon-"],
  [class*=" collecticon-"] {
    font-size: 1rem;
  }

  &::before {
    margin-inline-end: 0.375rem;
  }

  &::after {
    margin-inline-start: 0.375rem;
  }

  &::before,
  &::after,
  > * {
    vertical-align: top;
    display: inline-block;
    line-height: inherit !important;
  }

  /* Checkbox/radio handling */

  > input[type=checkbox],
  > input[type=radio] {
    @extend .visually-hidden;
  }

  /* Animation */

  transition: background-color 0.24s ease 0s;

  &--icon.round {
    width: 40px;
    border: 1px solid red;
    border-radius: 60px;

    &.red {
      height: 60px;
      background-color: $primary-color;
      color: white;

      span {
        border-top: 1px solid white;
      }
    }

    &.white {
      height: 40px;
      background-color: white;
      color: $primary-color;

      span {
        margin-top: -4px;
        border-bottom: 2px solid $primary-color;
      }
    }
  }

}

.secondary-bounded {
  background-color: red;
}

/* Button color modifiers
   ========================================================================== */

.button--inactive {
  cursor: no-drop !important;
  @include button-variation($light-base-color, "filled", "dark");
}

.button--primary-filled {
  @include button-variation($primary-color, "filled", "dark");
}

.button--primary-bounded {
  @include button-variation($primary-color, "bounded", null);
}

.button--secondary-filled {
  @include button-variation($secondary-color, "filled", "dark");
}

.button--secondary-bounded {
  @include button-variation($secondary-color, "bounded", null);
}

.button--secondary-light {
  @include button-variation($secondary-color, "filled", "light");
}

.button--grey-cement-bounded {
  @include button-variation($grey-cement, "bounded", null);
}

/* Primary Plain */

.button--base-plain {
  @include button-variation($base-color, "plain", null);
}

.button--primary-plain {
  @include button-variation($primary-color, "plain", null);
}

.button--secondary-plain {
  @include button-variation($secondary-color, "plain", null);
}


/* Achromic Glass (white ghost-like) */

.button--base-glass {
  @include button-variation($base-color, "glass", null);
}

.button--primary-glass {
  @include button-variation($primary-color, "glass", null);
}

.button--secondary-glass {
  @include button-variation($secondary-color, "glass", null);
}

/* Button size modifiers
   ========================================================================== */

/* Extra Small */

.button--xsmall,
.button-group--xsmall .button {
  line-height: 1rem;
  font-size: $font-size-xs;
  padding: 0.25rem 0.8rem;
  min-width: 2rem;
}

/* Small (24px) */

.button--small,
.button-group--small .button {
  line-height: 1.25rem;
  font-size: 0.875rem;
  padding: 0.25rem 1rem;
  min-width: 2rem;
}

/* Medium (32px)
   Default
*/

.button--medium,
.button-group--medium .button {
  line-height: 1.5rem;
  font-size: 1rem;
  padding: 0.5rem 1.5rem;
  min-width: 2.5rem;
}

/* Large (40px) */

.button--large,
.button-group--large .button {
  line-height: 1.5rem;
  font-size: 1rem;
  padding: 0.5rem 2rem;
  min-width: 3rem;
}

/* XLarge (48px) */

.button--xlarge,
.button-group--xlarge .button {
  line-height: 2rem;
  font-size: 1rem;
  padding: 0.5rem 2rem;
  min-width: 3rem;
}


/* Button containing icons & icons modifiers
   ========================================================================== */

.button--text-hidden {
  &::before,
  &::after {
    margin: 0;
  }

  > *:not([class^="collecticon-"]):not([class*=" collecticon-"]) {
    @extend .visually-hidden;
  }

  /*  :not(.button-group) & {
      padding-inline-start: 0;
      padding-inline-end: 0;
    }*/
}

/* Button Clickthrough
   ========================================================================== */
// Add this class to the click event of the button to pass through to the child
// Uses pointer events property

.btn--span-clickthrough {
  span {
    pointer-events: none;
  }
}

/* Button misc modifiers
   ========================================================================== */

.button--block {
  display: block;
  width: 100%;
}

.button--semi-fluid {
  min-width: 16rem;
}

.button--capsule {
  border-radius: $full-border-radius;
}

.button--close {
  &:before {
    @extend %collecticon-xmark;
    font-size: 1rem;
    line-height: inherit;
    vertical-align: top;
    margin-inline-start: 0.25rem;
  }
}

/* ==========================================================================
   Button groups
   ========================================================================== */

.button-group {
  position: relative;
  display: inline-block;
  vertical-align: middle;

  > .button {
    display: block;
    position: relative;
    margin: 0;
    z-index: 2;
  }
}

/* Horizontal */

.button-group--horizontal {
  > .button {
    float: left;
  }

  > .button:first-child:not(:last-child) {
    border-top-right-radius: 0;
    border-bottom-right-radius: 0;
    clip-path: inset(-100% 0 -100% -100%);
  }

  > .button:last-child:not(:first-child) {
    border-top-left-radius: 0;
    border-bottom-left-radius: 0;
    clip-path: inset(-100% -100% -100% 0);
  }

  > .button:not(:first-child):not(:last-child) {
    border-radius: 0;
    clip-path: inset(-100% 0);
  }

  > .button + .button {
    margin-inline-start: -$base-border-width;
  }
}

/* Vertical */

.button-group--vertical {
  > .button {
    clear: both;
    width: 100%;
    border-radius: $base-border-radius;
  }

  > .button:first-child:not(:last-child) {
    border-bottom-right-radius: 0;
    border-bottom-left-radius: 0;
    clip-path: inset(-100% -100% 0 -100%);
  }

  > .button:last-child:not(:first-child) {
    border-top-left-radius: 0;
    border-top-right-radius: 0;
    clip-path: inset(0 -100% -100% -100%);
  }

  > .button:not(:first-child):not(:last-child) {
    border-radius: 0;
    clip-path: inset(0 -100%);
  }

  > .button + .button {
    margin-top: -$base-border-width;
  }
}

.toggle-button-group--horizontal {
  display: flex;
}

.toggle-button-description {
  margin-inline-end: $global-spacing;
}

/* Button: Reset Styles */
.button-reset {
  display: inline-block;
  text-align: left;
  white-space: nowrap;
  vertical-align: middle;
  line-height: 1.5rem;
  font-size: 1rem;
  padding: 0.25rem 0.75rem;
  background: none;
  text-shadow: none;
  border: 0;
  border-radius: $full-border-radius;
  font-weight: $base-font-bold;
  cursor: pointer;

  /* States */

  &:hover {
    opacity: initial;
  }
}

.arrow {
  border: solid $primary-color;
  box-sizing: inherit;
  border-width: 0 1px 1px 0;
  display: inline-block;
  padding: 3px;
  margin-top: 10px;
}

.right {
  transform: rotate(-45deg);
  -webkit-transform: rotate(-45deg);
}

.left {
  transform: rotate(135deg);
  -webkit-transform: rotate(135deg);
  margin-right: 10px;
}

.up {
  transform: rotate(-135deg);
  -webkit-transform: rotate(-135deg);
}

.down {
  transform: rotate(45deg);
  -webkit-transform: rotate(45deg);
}

[class*="icono"] {
  position: relative;
  display: inline-block;
  vertical-align: middle;
  box-sizing: border-box;

  &:after, &:before {
    content: "";
    box-sizing: border-box;
  }
}

[class*="icono-arrow1"] {
  width: 9px;
  height: 9px;
  border-width: 2px 2px 0 0;
  border-style: solid;
  margin: 1px;

  &:before {
    position: absolute;
    height: 2px;
    box-shadow: inset 0 0 0 48px;
    transform: rotate(-45deg);
    width: 17px;
    top: 3px;
    left: -5px;
  }

  &[class*="-left"] {
    transform: rotate(45deg);

    &[class*="-up"] {
      transform: none;
    }

    &[class*="-down"] {
      transform: rotate(90deg);
    }
  }

  &[class*="-right"] {
    transform: rotate(-135deg);

    &[class*="-up"] {
      transform: rotate(-90deg);
    }

    &[class*="-down"] {
      transform: rotate(180deg);
    }
  }

  &[class*="-up"] {
    transform: rotate(-45deg);
  }

  &[class*="-down"] {
    transform: rotate(135deg);
  }
}

[class*="icono-arrow2"] {
  width: 0;
  height: 0;
  border-width: 6px;
  border-style: solid;
  border-bottom-color: transparent;
  border-left-color: transparent;
  margin: 10px;

  &:before {
    right: 0;
    top: -3px;
    position: absolute;
    height: 4px;
    box-shadow: inset 0 0 0 32px;
    transform: rotate(-45deg);
    width: 15px;
    transform-origin: right top;
  }

  &[class*="-left"] {
    transform: rotate(45deg);

    &[class*="-up"] {
      transform: none;
    }

    &[class*="-down"] {
      transform: rotate(90deg);
    }
  }

  &[class*="-right"] {
    transform: rotate(-135deg);

    &[class*="-up"] {
      transform: rotate(-90deg);
    }

    &[class*="-down"] {
      transform: rotate(180deg);
    }
  }

  &[class*="-up"] {
    transform: rotate(-45deg);
  }

  &[class*="-down"] {
    transform: rotate(135deg);
  }
}

[class*="icono"] {
  position: relative;
  display: inline-block;
  vertical-align: middle;
  box-sizing: border-box;

  &:after, &:before {
    content: "";
    box-sizing: border-box;
  }
}

[class*="icono-arrow3"] {
  width: 9px;
  height: 10px;
  border-width: 4px 4px 0 0;
  border-style: solid;
  margin: 10px;
  border-radius: 0 2px 0 0;

  &:before, &:after {
    border-radius: 2px;
    position: absolute;
  }

  &:before {
    right: 0;
    top: -3px;
    width: 15px;
    height: 3px;
    transform: rotate(-45deg);
    transform-origin: right top;
    box-shadow: inset 0 0 0 32px;
  }

  &:after {
    width: 4px;
    height: 4px;
    left: -2px;
    top: -4px;
    box-shadow: inset 0 0 0 32px, 16px 17px;
  }

  &[class*="-left"] {
    transform: rotate(45deg);

    &[class*="-up"] {
      transform: none;
    }

    &[class*="-down"] {
      transform: rotate(90deg);
    }
  }

  &[class*="-right"] {
    transform: rotate(-135deg);

    &[class*="-up"] {
      transform: rotate(-90deg);
    }

    &[class*="-down"] {
      transform: rotate(180deg);
    }
  }

  &[class*="-up"] {
    transform: rotate(-45deg);
  }

  &[class*="-down"] {
    transform: rotate(135deg);
  }
}

[class*="icono-arrow4"] {
  width: 0;
  height: 0;
  border: 3px solid transparent;
  border-top: 3px solid;
  border-right: 3px solid;
  margin: 1px;
  margin-top: -3px;
  margin-left: 5px;

  &[class*="-left"] {
    transform: rotate(45deg);

    &[class*="-up"] {
      transform: none;
    }

    &[class*="-down"] {
      transform: rotate(90deg);
    }
  }

  &[class*="-right"] {
    transform: rotate(-135deg);

    &[class*="-up"] {
      transform: rotate(-90deg);
    }

    &[class*="-down"] {
      transform: rotate(180deg);
    }
  }

  &[class*="-up"] {
    transform: rotate(-45deg);
  }

  &[class*="-down"] {
    transform: rotate(135deg);
  }
}