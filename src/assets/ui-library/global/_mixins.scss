@mixin input-placeholder {
  &:-moz-placeholder {
    @content;

    opacity: 1;
  }

  &::-moz-placeholder {
    @content;

    opacity: 1;
  }

  &:-ms-input-placeholder {
    @content;
  }

  &::-webkit-input-placeholder {
    @content;
  }
}

@mixin textarea-placeholder {
  &:-moz-placeholder {
    @content;

    opacity: 1;
  }

  &::-moz-placeholder {
    @content;

    opacity: 1;
  }

  &:-ms-input-placeholder {
    @content;
  }

  &::-webkit-input-placeholder {
    @content;
  }
}

@mixin line-height($fontSize: 16, $lineHeight: 22) {
  line-height: ($lineHeight / $fontSize);
}

@mixin font-size($size) {
  font-size: #{$size / 10}rem;
}

@mixin clearfix {
  &::before,
  &::after {
    content: "";
    display: table;
  }

  &::after {
    clear: both;
  }
}

@mixin wrapper($width, $width-gl, $margin) {
  #{$wrapper} {
    margin: $margin;
    max-width: $width;
    width: $width;
  }

  // WRAPPER FOR FIXED GRID */
  // DELETE AS REQUIRED */
  // body.gutterless .#{wrapper} {
  // 	width: $width-gl;
  // 	max-width: $width-gl;
  // 	margin: $margin;
  // }

  // WRAPPER FOR FLUID GRID */
  // DELETE AS REQUIRED */
  .fluid {
    .#{wrapper} {
      max-width: $fluidMax;
      width: auto;
    }
  }
}

@mixin red-highlight($borderWidth, $rotation, $bottomPos) {
  display: inline-block;
  position: relative;

  &::after {
    content: "";
    left: 0;
    bottom: $bottomPos;
    border-bottom: $borderWidth solid $red;
    transform: rotate($rotation);
    width: 100%;
    position: absolute;
    z-index: -1;
  }
}

@mixin video-mask {
  .video-container {
    height: auto;
    position: relative;

    .video-mask {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: rgba(0, 0, 0, 0.06);

      .video-play {
        position: absolute;
        width: 55px;
        height: 60px;
        background: url(../../img/play-icon.svg) no-repeat 0 0;
        top: 50%;
        left: 50%;
        margin-left: -27.5px;
        margin-top: -30px;
        z-index: 99;

        @media #{$mobile} {
          background-size: 70%;
          margin-left: -16.5px;
          margin-top: -22px;
        }

        @media #{$tablet-portrait} {
          background-size: 70%;
          margin-left: -16.5px;
          margin-top: -22px;
        }
      }
    }
  }
}

@mixin image-box {
  border: 4px solid $red;
  width: 100%;
  position: absolute;
  height: 100%;
  top: -3%;
  left: -3%;
}

@mixin image-caption {
  font-size: 1.4rem;
  line-height: 2rem;
  display: block;

  @media #{$mobile} {
    font-size: 1.3rem;
  }
}

@mixin cta-teal {
  appearance: none;
  cursor: pointer;
  font-family: $baseFontFamily;
  font-size: 1.6rem;
  font-weight: 700;
  line-height: 2rem;
  display: inline-block;
  text-transform: uppercase;
  border-radius: 0;
  position: relative;
  color: $white;
  border: 2px solid $teal;
  z-index: 4;
  padding: 1.2rem 1.8rem 1rem 3rem;
  background: $teal url("data:image/svg+xml;charset=utf8,%3Csvg width='8' fill='%23ffffff' height='12' viewBox='0 0 10 15' xmlns='http://www.w3.org/2000/svg' focusable='false'%3E%3Ctitle%3EChevron icon%3C/title%3E%3Cpath d='M8.435 7.778l-6.364 6.364-1.414-1.414L6.314 7.07.657 1.414 2.07 0l7.071 7.071-.707.707z'/%3E%3C/svg%3E") no-repeat 1rem 50%;
  width: 100%;
  max-width: 100%;
  text-align: center;

  &:hover,
  &:focus {
    background: $white url("data:image/svg+xml;charset=utf8,%3Csvg width='8' fill='%232b7586' height='12' viewBox='0 0 10 15' xmlns='http://www.w3.org/2000/svg' focusable='false'%3E%3Ctitle%3EChevron icon%3C/title%3E%3Cpath d='M8.435 7.778l-6.364 6.364-1.414-1.414L6.314 7.07.657 1.414 2.07 0l7.071 7.071-.707.707z'/%3E%3C/svg%3E") no-repeat 1rem 50%; // sass-lint:disable quotes
    border-color: $teal;
    color: $teal;
    transition: color 0.3s;
  }

  @media #{$from-small-screen-up} {
    width: auto;
    min-width: 14rem;
    text-align: left;
  }
}

// Mixing for Margin and Padding

/*
This .scss loop will create "margin helpers" and "padding helpers" for use in your web projects.
It will generate several classes such as:
.mr-10 which gives margin-right 10 pixels.
.mr-15 gives MARGIN to the RIGHT 15 pixels.
.mt-15 gives MARGIN to the TOP 15 pixels and so on.
.pb-5 gives PADDING to the BOTTOM of 5 pixels
.pl-40 gives PADDING to the LEFT of 40 pixels
The first letter is "m" or "p" for MARGIN or PADDING
Second letter is "t", "b", "l", or "r" for TOP, BOTTOM, LEFT, or RIGHT
Third letter is the number of spacing in pixels. Adjust the amounts generated by editing the $spaceamounts variable below.
*/

// Adjust this to include the pixel amounts you need.
$spaceamounts: (0, 4, 8, 16, 24, 32, 40, 48, 56, 64, 72, 96, 128, 192);
$sides: (top, bottom, left, right); // Leave this variable alone

@each $space in $spaceamounts {
  @each $side in $sides {
    .m#{str-slice($side, 0, 1)}-#{$space} {
      margin-#{$side}: #{$space}px;
    }

    .p#{str-slice($side, 0, 1)}-#{$space} {
      padding-#{$side}: #{$space}px;
    }
  }
}

@mixin button($btn-text-color, $btn-bg, $btn-bg-hover, $btn-bg-active) {
  color: $btn-text-color;
  border: none;
  appearance: none;
  cursor: pointer;
  font-family: $baseFontFamily;
  font-size: 1.6rem;
  font-weight: 700;
  border-radius: 0;
  position: relative;
  z-index: 1;
  padding: 0;
  transition: background-color ease-in-out 0.3s;
  width: 100%;
  display: flex;
  flex-direction: column;
  justify-content: center;

  @media #{$tablet} {
    display: inline-block;
    width: auto;
    font-size: 1.8rem;
  }

  /* Fixing the Safari bug for `<button>`s overflow */
  .button-text {
    position: relative;
    padding: 1.2rem 2.4rem;
    width: 100%;
    height: 100%;
    border: 1px solid $btn-bg-hover;
    display: inline-block;
    background: $btn-bg;

    @media #{$tablet} {
      display: inline-flex;
    }

    &:focus {
      outline: none;
    }
  }

  &:hover {
    color: inherit;
    border-bottom: none;

    > .button-text {
      background: $btn-bg-hover;
      border: 1px solid $btn-bg-hover;
    }
  }

  &:focus {
    outline: 2px solid $btn-bg-hover;
    outline-offset: 0.5rem;
    color: inherit;
    border-bottom-color: $btn-bg-hover;

    > .button-text {
      background: $btn-bg-hover;
      border: 1px solid $btn-bg-hover;
    }
  }

  &:active {
    color: inherit;
    border-bottom: none;

    > .button-text {
      background: $btn-bg-active;
      border: 1px solid $btn-bg-active;
    }
  }

  i {
    padding: 0.3rem 0 0 0;
    margin: 0;
    font-size: 2rem;
    position: absolute;
    top: 1.1rem;

    @media #{$tablet} {
      padding: 0;
      font-size: 2.2rem;
      position: relative;
      top: 0;
      left: 0.8rem;
      display: flex;
    }
  }
}

@mixin button-style($btn-text-color, $btn-bg, $btn-bg-hover, $btn-bg-active) {
  color: $btn-text-color;
  background: $btn-bg;
  border: 1px solid $btn-bg;
  appearance: none;
  cursor: pointer;
  font-family: $baseFontFamily;
  font-size: 1.6rem;
  font-weight: 700;
  border-radius: 0;
  position: relative;
  z-index: 1;
  padding: 1.5rem 2.4rem;
  transition: background-color ease-in-out 0.3s;
  width: 100%;
  display: flex;
  flex-direction: column;
  justify-content: center;

  @media #{$tablet} {
    display: inline-flex;
    width: auto;
    font-size: 1.8rem;
  }

  &:hover {
    background: $btn-bg-hover;
    border: 1px solid $btn-bg-hover;
  }

  &:focus {
    background: $btn-bg-hover;
    border: 1px solid $btn-bg-hover;
    outline: 2px solid $btn-bg-hover;
    outline-offset: 0.5rem;
  }

  &:active {
    background: $btn-bg-active;
    border: 1px solid $btn-bg-active;
  }

  i {
    padding: 0;
    margin: 0;
    font-size: 2rem;
    position: absolute;
    top: 1.1rem;

    @media #{$tablet} {
      font-size: 2.2rem;
      position: relative;
      top: 0;
      left: 0.8rem;
    }
  }
}

@mixin alert-icon($color, $size) {
  padding: 0.3rem 0.4rem;

  i {
    color: $color;
    font-size: $size;
  }
}
